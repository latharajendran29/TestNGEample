<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="15" hostname="LAPTOP-SBG8MLNP" name="com.testng.examples.Assertfails" tests="20" failures="3" timestamp="01 Jul 2019 06:22:21 GMT" time="0.196" errors="0">
  <testcase name="test5" time="0.002" classname="com.testng.examples.Assertfails">
    <skipped/>
  </testcase> <!-- test5 -->
  <testcase name="test3" time="0.021" classname="com.testng.examples.Assertfails"/>
  <testcase name="test5" time="0.001" classname="com.testng.examples.Assertfails">
    <skipped/>
  </testcase> <!-- test5 -->
  <testcase name="test1" time="0.009" classname="com.testng.examples.Assertfails">
    <skipped/>
  </testcase> <!-- test1 -->
  <testcase name="test5" time="0.004" classname="com.testng.examples.Assertfails">
    <skipped/>
  </testcase> <!-- test5 -->
  <testcase name="test1" time="0.020" classname="com.testng.examples.Assertfails">
    <skipped/>
  </testcase> <!-- test1 -->
  <testcase name="test4" time="0.020" classname="com.testng.examples.Assertfails"/>
  <testcase name="test5" time="0.023" classname="com.testng.examples.Assertfails">
    <skipped/>
  </testcase> <!-- test5 -->
  <testcase name="test1" time="0.002" classname="com.testng.examples.Assertfails">
    <skipped/>
  </testcase> <!-- test1 -->
  <testcase name="test1" time="0.007" classname="com.testng.examples.Assertfails">
    <skipped/>
  </testcase> <!-- test1 -->
  <testcase name="test2" time="0.002" classname="com.testng.examples.Assertfails">
    <failure type="java.lang.AssertionError" message="null">
      <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.fail(Assert.java:103)
at com.testng.examples.Assertfails.test2(Assertfails.java:17)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
    </failure>
  </testcase> <!-- test2 -->
  <testcase name="test2" time="0.024" classname="com.testng.examples.Assertfails">
    <skipped/>
  </testcase> <!-- test2 -->
  <testcase name="test2" time="0.004" classname="com.testng.examples.Assertfails">
    <skipped/>
  </testcase> <!-- test2 -->
  <testcase name="test5" time="0.004" classname="com.testng.examples.Assertfails">
    <failure type="java.lang.AssertionError" message="null">
      <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.fail(Assert.java:103)
at com.testng.examples.Assertfails.test5(Assertfails.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
    </failure>
  </testcase> <!-- test5 -->
  <testcase name="test1" time="0.023" classname="com.testng.examples.Assertfails">
    <skipped/>
  </testcase> <!-- test1 -->
  <testcase name="test1" time="0.001" classname="com.testng.examples.Assertfails">
    <failure type="java.lang.AssertionError" message="null">
      <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.fail(Assert.java:103)
at com.testng.examples.Assertfails.test1(Assertfails.java:10)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
    </failure>
  </testcase> <!-- test1 -->
  <testcase name="test2" time="0.002" classname="com.testng.examples.Assertfails">
    <skipped/>
  </testcase> <!-- test2 -->
  <testcase name="test2" time="0.013" classname="com.testng.examples.Assertfails">
    <skipped/>
  </testcase> <!-- test2 -->
  <testcase name="test5" time="0.011" classname="com.testng.examples.Assertfails">
    <skipped/>
  </testcase> <!-- test5 -->
  <testcase name="test2" time="0.003" classname="com.testng.examples.Assertfails">
    <skipped/>
  </testcase> <!-- test2 -->
</testsuite> <!-- com.testng.examples.Assertfails -->
